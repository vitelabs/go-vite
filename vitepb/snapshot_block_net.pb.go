// Code generated by protoc-gen-go. DO NOT EDIT.
// source: vitepb/snapshot_block_net.proto

package vitepb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type SnapshotBlockNet struct {
	Hash                 []byte                   `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	PrevHash             []byte                   `protobuf:"bytes,2,opt,name=prevHash,proto3" json:"prevHash,omitempty"`
	Height               []byte                   `protobuf:"bytes,3,opt,name=height,proto3" json:"height,omitempty"`
	Producer             []byte                   `protobuf:"bytes,4,opt,name=producer,proto3" json:"producer,omitempty"`
	Snapshot             map[string]*SnapshotItem `protobuf:"bytes,5,rep,name=snapshot,proto3" json:"snapshot,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Signature            []byte                   `protobuf:"bytes,6,opt,name=signature,proto3" json:"signature,omitempty"`
	Timestamp            uint64                   `protobuf:"varint,7,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Amount               []byte                   `protobuf:"bytes,8,opt,name=amount,proto3" json:"amount,omitempty"`
	PublicKey            []byte                   `protobuf:"bytes,9,opt,name=publicKey,proto3" json:"publicKey,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *SnapshotBlockNet) Reset()         { *m = SnapshotBlockNet{} }
func (m *SnapshotBlockNet) String() string { return proto.CompactTextString(m) }
func (*SnapshotBlockNet) ProtoMessage()    {}
func (*SnapshotBlockNet) Descriptor() ([]byte, []int) {
	return fileDescriptor_snapshot_block_net_c5ba341fd02225e8, []int{0}
}
func (m *SnapshotBlockNet) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SnapshotBlockNet.Unmarshal(m, b)
}
func (m *SnapshotBlockNet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SnapshotBlockNet.Marshal(b, m, deterministic)
}
func (dst *SnapshotBlockNet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SnapshotBlockNet.Merge(dst, src)
}
func (m *SnapshotBlockNet) XXX_Size() int {
	return xxx_messageInfo_SnapshotBlockNet.Size(m)
}
func (m *SnapshotBlockNet) XXX_DiscardUnknown() {
	xxx_messageInfo_SnapshotBlockNet.DiscardUnknown(m)
}

var xxx_messageInfo_SnapshotBlockNet proto.InternalMessageInfo

func (m *SnapshotBlockNet) GetHash() []byte {
	if m != nil {
		return m.Hash
	}
	return nil
}

func (m *SnapshotBlockNet) GetPrevHash() []byte {
	if m != nil {
		return m.PrevHash
	}
	return nil
}

func (m *SnapshotBlockNet) GetHeight() []byte {
	if m != nil {
		return m.Height
	}
	return nil
}

func (m *SnapshotBlockNet) GetProducer() []byte {
	if m != nil {
		return m.Producer
	}
	return nil
}

func (m *SnapshotBlockNet) GetSnapshot() map[string]*SnapshotItem {
	if m != nil {
		return m.Snapshot
	}
	return nil
}

func (m *SnapshotBlockNet) GetSignature() []byte {
	if m != nil {
		return m.Signature
	}
	return nil
}

func (m *SnapshotBlockNet) GetTimestamp() uint64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *SnapshotBlockNet) GetAmount() []byte {
	if m != nil {
		return m.Amount
	}
	return nil
}

func (m *SnapshotBlockNet) GetPublicKey() []byte {
	if m != nil {
		return m.PublicKey
	}
	return nil
}

type SnapshotBlockListNet struct {
	Blocks               []*SnapshotBlockNet `protobuf:"bytes,1,rep,name=blocks,proto3" json:"blocks,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *SnapshotBlockListNet) Reset()         { *m = SnapshotBlockListNet{} }
func (m *SnapshotBlockListNet) String() string { return proto.CompactTextString(m) }
func (*SnapshotBlockListNet) ProtoMessage()    {}
func (*SnapshotBlockListNet) Descriptor() ([]byte, []int) {
	return fileDescriptor_snapshot_block_net_c5ba341fd02225e8, []int{1}
}
func (m *SnapshotBlockListNet) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SnapshotBlockListNet.Unmarshal(m, b)
}
func (m *SnapshotBlockListNet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SnapshotBlockListNet.Marshal(b, m, deterministic)
}
func (dst *SnapshotBlockListNet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SnapshotBlockListNet.Merge(dst, src)
}
func (m *SnapshotBlockListNet) XXX_Size() int {
	return xxx_messageInfo_SnapshotBlockListNet.Size(m)
}
func (m *SnapshotBlockListNet) XXX_DiscardUnknown() {
	xxx_messageInfo_SnapshotBlockListNet.DiscardUnknown(m)
}

var xxx_messageInfo_SnapshotBlockListNet proto.InternalMessageInfo

func (m *SnapshotBlockListNet) GetBlocks() []*SnapshotBlockNet {
	if m != nil {
		return m.Blocks
	}
	return nil
}

func init() {
	proto.RegisterType((*SnapshotBlockNet)(nil), "vitepb.SnapshotBlockNet")
	proto.RegisterMapType((map[string]*SnapshotItem)(nil), "vitepb.SnapshotBlockNet.SnapshotEntry")
	proto.RegisterType((*SnapshotBlockListNet)(nil), "vitepb.SnapshotBlockListNet")
}

func init() {
	proto.RegisterFile("vitepb/snapshot_block_net.proto", fileDescriptor_snapshot_block_net_c5ba341fd02225e8)
}

var fileDescriptor_snapshot_block_net_c5ba341fd02225e8 = []byte{
	// 314 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x51, 0x5d, 0x4b, 0x32, 0x41,
	0x14, 0x66, 0xfd, 0xd8, 0x57, 0x8f, 0x6f, 0x20, 0x83, 0xc4, 0x20, 0x51, 0xe2, 0x45, 0x48, 0x17,
	0x16, 0x76, 0x13, 0x5d, 0x0a, 0x81, 0x51, 0x04, 0x4d, 0x3f, 0x40, 0x66, 0xf5, 0xe0, 0x0e, 0xba,
	0x3b, 0xc3, 0xce, 0x59, 0xc1, 0x5f, 0x5f, 0xcc, 0x8c, 0xae, 0x28, 0x75, 0x37, 0xe7, 0xf9, 0xd8,
	0x7d, 0xce, 0x73, 0xe0, 0x66, 0xab, 0x08, 0x4d, 0x72, 0x6f, 0x73, 0x69, 0x6c, 0xaa, 0x69, 0x9e,
	0x6c, 0xf4, 0x62, 0x3d, 0xcf, 0x91, 0xc6, 0xa6, 0xd0, 0xa4, 0x59, 0x1c, 0x04, 0xfd, 0xeb, 0xdf,
	0x85, 0xcb, 0x24, 0xe8, 0x86, 0xdf, 0x35, 0xe8, 0x7e, 0xed, 0xb9, 0xa9, 0xa3, 0x3e, 0x90, 0x18,
	0x83, 0x46, 0x2a, 0x6d, 0xca, 0xa3, 0x41, 0x34, 0xfa, 0x2f, 0xfc, 0x9b, 0xf5, 0xa1, 0x65, 0x0a,
	0xdc, 0xce, 0x1c, 0x5e, 0xf3, 0x78, 0x35, 0xb3, 0x4b, 0x88, 0x53, 0x54, 0xab, 0x94, 0x78, 0xdd,
	0x33, 0xfb, 0x29, 0x78, 0xf4, 0xb2, 0x5c, 0x60, 0xc1, 0x1b, 0x07, 0x4f, 0x98, 0xd9, 0x14, 0x5a,
	0x87, 0x4c, 0xbc, 0x39, 0xa8, 0x8f, 0x3a, 0x93, 0xdb, 0x71, 0xc8, 0x3a, 0x3e, 0xcf, 0x53, 0x01,
	0x2f, 0x39, 0x15, 0x3b, 0x51, 0xf9, 0xd8, 0x15, 0xb4, 0xad, 0x5a, 0xe5, 0x92, 0xca, 0x02, 0x79,
	0xec, 0x7f, 0x70, 0x04, 0x1c, 0x4b, 0x2a, 0x43, 0x4b, 0x32, 0x33, 0xfc, 0xdf, 0x20, 0x1a, 0x35,
	0xc4, 0x11, 0x70, 0x99, 0x65, 0xa6, 0xcb, 0x9c, 0x78, 0x2b, 0x64, 0x0e, 0x93, 0x73, 0x99, 0x32,
	0xd9, 0xa8, 0xc5, 0x1b, 0xee, 0x78, 0x3b, 0x7c, 0xb3, 0x02, 0xfa, 0x9f, 0x70, 0x71, 0x12, 0x86,
	0x75, 0xa1, 0xbe, 0xc6, 0x9d, 0x6f, 0xaa, 0x2d, 0xdc, 0x93, 0xdd, 0x41, 0x73, 0x2b, 0x37, 0x25,
	0xfa, 0x96, 0x3a, 0x93, 0xde, 0xf9, 0x56, 0xaf, 0x84, 0x99, 0x08, 0x92, 0xe7, 0xda, 0x53, 0x34,
	0x9c, 0x41, 0xef, 0x64, 0xe1, 0x77, 0x65, 0xc9, 0x1d, 0xe1, 0x01, 0x62, 0x7f, 0x2b, 0xcb, 0x23,
	0x5f, 0x0f, 0xff, 0xab, 0x1e, 0xb1, 0xd7, 0x25, 0xb1, 0x3f, 0xe9, 0xe3, 0x4f, 0x00, 0x00, 0x00,
	0xff, 0xff, 0xe8, 0x3c, 0x5e, 0xe3, 0x1d, 0x02, 0x00, 0x00,
}
