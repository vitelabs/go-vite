syntax="proto3";

package vitepb;

import "vitepb/account_block.proto";
import "vitepb/snapshot_block.proto";

message Handshake {
    int64 Version = 1;

    int64 NetId = 2;

    string Name = 3;

    bytes ID = 4;

    int64 Timestamp = 5;

    bytes Genesis = 6;
    uint64 Height = 7;
    bytes Head = 8;
    bytes FileAddress = 9;

    bytes Key = 10;
    bytes Token = 11;
    
    bytes PublicAddress = 12;
}

message SyncConnHandshake {
    bytes ID = 1;
    int64 Timestamp = 2;
    bytes Key = 3;
    bytes Token = 4;
};

message ChunkRequest {
    uint64 From = 1;
    uint64 To = 2;
    bytes PrevHash = 3;
    bytes EndHash = 4;
}

message ChunkResponse {
    uint64 From = 1;
    uint64 To = 2;
    bytes PrevHash = 3;
    bytes EndHash = 4;
    uint64 Size = 5;
}

message State {
    message Peer {
        bytes ID = 1;
        PeerStatus Status = 3;
    }

    enum PeerStatus {
        Connected = 0;
        Disconnected = 1;
    }

    repeated Peer Peers = 1;
    bool Patch = 2;

    bytes Head = 3;
    uint64 Height = 4;

    int64 Timestamp = 10;
}

message HashHeight {
    bytes Hash = 1;
    uint64 Height = 2;
}

message HashHeightPoint {
    HashHeight Point = 1;
    uint64 Size = 2;
}

message HashHeightList {
    repeated HashHeightPoint Points = 1;
}

message GetHashHeightList {
    repeated HashHeight From = 1;
    uint64 Step = 2;
    uint64 To = 3;
}

message GetSnapshotBlocks {
    HashHeight From = 1;
    uint64 Count = 2;
    bool Forward = 3;
}

message SnapshotBlocks {
    repeated vitepb.SnapshotBlock Blocks = 1;
}

message GetAccountBlocks {
    bytes Address = 1;
    HashHeight From = 2;
    uint64 Count = 3;
    bool Forward = 4;
}

message AccountBlocks {
    repeated vitepb.AccountBlock Blocks = 1;
}

message NewSnapshotBlock {
    vitepb.SnapshotBlock Block = 1;
    int32 TTL = 2;
}

message NewAccountBlock {
    vitepb.AccountBlock Block = 1;
    int32 TTL = 2;
}

message NewAccountBlockBytes {
    bytes Block = 1;
    int32 TTL = 2;
}

message Trace {
    bytes Hash = 1;
    repeated bytes Path = 2;
    uint32 TTL = 3;
}
